{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","nameId","uuid","numberId","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","id","props","addNewContact","resetForm","this","className","s","form","onSubmit","htmlFor","type","onChange","pattern","title","required","btnForm","Component","ContactItem","handleClick","deleteContact","contact","btnDel","onClick","ContactList","contacts","map","Filter","newFilter","findNameId","App","filter","isContact","find","toLowerCase","alert","prevState","filteredContactsByName","includes","idContact","indexOf","slice","localContacts","localStorage","getItem","parseContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ec41c45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1vqA6\",\"btnForm\":\"ContactForm_btnForm__CUvvu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDel\":\"ContactItem_btnDel__2Nnsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Filter_contacts__210rJ\"};","import { Component } from 'react'\r\nimport { v4 as uuid } from 'uuid'\r\nimport s from './ContactForm.module.css'\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n}\r\nexport class ContactForm extends Component {\r\n  nameId = uuid()\r\n  numberId = uuid()\r\n\r\n  state = { ...INITIAL_STATE }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const { name, number } = this.state\r\n    const id = uuid()\r\n    this.props.addNewContact({ id, name, number })\r\n    this.resetForm()\r\n  }\r\n\r\n  resetForm = () => this.setState({ ...INITIAL_STATE })\r\n\r\n  render() {\r\n    const { name, number } = this.state\r\n    const { handleChange, handleSubmit, nameId, numberId } = this\r\n\r\n    return (\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label htmlFor={nameId}>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id={nameId}\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n\r\n        <label htmlFor={numberId}>Number</label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          id={numberId}\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n\r\n        <button className={s.btnForm} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","import { Component } from 'react'\r\nimport s from './ContactItem.module.css'\r\n\r\nexport class ContactItem extends Component {\r\n  handleClick = (e) => this.props.deleteContact(e.target.name)\r\n\r\n  render() {\r\n    const { id, name, number } = this.props.contact\r\n    return (\r\n      <li key={id}>\r\n        {name}: {number}\r\n        <button\r\n          className={s.btnDel}\r\n          type=\"button\"\r\n          name={name}\r\n          onClick={this.handleClick}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n","import { Component } from 'react'\r\nimport { ContactItem } from '../ContactItem/ContactItem'\r\n\r\nexport class ContactList extends Component {\r\n  render() {\r\n    const { contacts, deleteContact } = this.props\r\n    return (\r\n      <ul>\r\n        {contacts.map((contact) => (\r\n          <ContactItem contact={contact} deleteContact={deleteContact} />\r\n        ))}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n","import { v4 as uuid } from 'uuid'\r\nimport s from './Filter.module.css'\r\n\r\nexport function Filter({ newFilter }) {\r\n  const findNameId = uuid()\r\n  const handleFilter = (e) => newFilter(e.target.value)\r\n\r\n  return (\r\n    <div className={s.contacts}>\r\n      <label htmlFor={findNameId}>Find contact by name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"findName\"\r\n        id={findNameId}\r\n        onChange={handleFilter}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import './App.css'\nimport { Component } from 'react'\nimport { ContactForm } from './components/ContactForm/ContactForm'\nimport { ContactList } from './components/ContactList/ContactList'\nimport { Filter } from './components/Filter/Filter'\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  }\n\n  componentDidMount() {\n    const localContacts = localStorage.getItem('contacts')\n    const parseContacts = JSON.parse(localContacts)\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts })\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n\n  isContact = (name) =>\n    this.state.contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase(),\n    )\n\n  addNewContact = (contact) =>\n    !this.isContact(contact.name)\n      ? this.setState((prevState) => ({\n          contacts: [...prevState.contacts, contact],\n        }))\n      : alert(`${contact.name} is already in contact`)\n\n  newFilter = (filter) => this.setState({ filter })\n\n  filteredContactsByName = () => {\n    const { contacts, filter } = this.state\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    )\n  }\n  idContact = (name) => this.state.contacts.indexOf(this.isContact(name))\n\n  deleteContact = (name) => {\n    const id = this.idContact(name)\n    this.setState((prevState) => ({\n      contacts: [\n        ...prevState.contacts.slice(0, id),\n        ...prevState.contacts.slice(id + 1),\n      ],\n    }))\n  }\n\n  render() {\n    const {\n      addNewContact,\n      newFilter,\n      filteredContactsByName,\n      deleteContact,\n    } = this\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm addNewContact={addNewContact} />\n\n        <h2>Contacts</h2>\n        <Filter newFilter={newFilter} />\n        <ContactList\n          contacts={filteredContactsByName()}\n          deleteContact={deleteContact}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}