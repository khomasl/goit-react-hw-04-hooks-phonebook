{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","addNewContact","nameId","uuid","numberId","useState","name","setName","number","setNumber","handleChange","useCallback","e","target","value","handleSubmit","preventDefault","id","className","s","form","onSubmit","htmlFor","type","onChange","pattern","title","required","btnForm","ContactItem","contact","deleteContact","btnDel","onClick","ContactList","contacts","map","Filter","newFilter","findNameId","toLowerCase","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","findContact","normName","find","alert","includes","indexOf","slice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7dfc7af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1vqA6\",\"btnForm\":\"ContactForm_btnForm__CUvvu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDel\":\"ContactItem_btnDel__2Nnsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Filter_contacts__210rJ\"};","import { useState, useCallback } from 'react'\r\nimport { v4 as uuid } from 'uuid'\r\nimport s from './ContactForm.module.css'\r\n\r\nexport default function ContactForm({ addNewContact }) {\r\n  let nameId = uuid()\r\n  let numberId = uuid()\r\n\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n\r\n  const handleChange = useCallback(\r\n    (e) => {\r\n      const { name, value } = e.target\r\n      name === 'name' ? setName(value) : setNumber(value)\r\n    },\r\n    [name, number],\r\n  )\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault()\r\n      const id = uuid()\r\n      addNewContact({ id, name, number })\r\n      setName('')\r\n      setNumber('')\r\n    },\r\n    [name, number],\r\n  )\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label htmlFor={nameId}>Name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id={nameId}\r\n        value={name}\r\n        onChange={handleChange}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n\r\n      <label htmlFor={numberId}>Number</label>\r\n      <input\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        id={numberId}\r\n        value={number}\r\n        onChange={handleChange}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n      />\r\n\r\n      <button className={s.btnForm} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n","import s from './ContactItem.module.css'\r\n\r\nexport default function ContactItem({ contact, deleteContact }) {\r\n  const { id, name, number } = contact\r\n  const handleClick = (e) => deleteContact(e.target.name)\r\n\r\n  return (\r\n    <li key={id}>\r\n      {name}: {number}\r\n      <button\r\n        className={s.btnDel}\r\n        type=\"button\"\r\n        name={name}\r\n        onClick={handleClick}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  )\r\n}\r\n","import ContactItem from '../ContactItem/ContactItem'\r\n\r\nexport default function ContactList({ contacts, deleteContact }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <ContactItem contact={contact} deleteContact={deleteContact} />\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n","import { v4 as uuid } from 'uuid'\r\nimport s from './Filter.module.css'\r\n\r\nexport default function Filter({ newFilter }) {\r\n  const findNameId = uuid()\r\n  const handleFilter = (e) => newFilter(e.target.value.toLowerCase())\r\n\r\n  return (\r\n    <div className={s.contacts}>\r\n      <label htmlFor={findNameId}>Find contact by name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"findName\"\r\n        id={findNameId}\r\n        onChange={handleFilter}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import './App.css'\nimport { useState, useEffect } from 'react'\nimport ContactForm from './components/ContactForm/ContactForm'\nimport ContactList from './components/ContactList/ContactList'\nimport Filter from './components/Filter/Filter'\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? []\n  })\n  const [filter, setFilter] = useState('')\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts))\n  }, [contacts])\n\n  const findContact = (name) => {\n    const normName = name.toLowerCase()\n    return contacts.find((contact) => contact.name.toLowerCase() === normName)\n  }\n\n  const addNewContact = (contact) =>\n    !findContact(contact.name)\n      ? setContacts([...contacts, contact])\n      : alert(`${contact.name} is already in contact`)\n\n  const filteredContactsByName = () =>\n    contacts.filter((contact) => contact.name.toLowerCase().includes(filter))\n\n  const deleteContact = (name) => {\n    const id = contacts.indexOf(findContact(name))\n    setContacts([...contacts.slice(0, id), ...contacts.slice(id + 1)])\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm addNewContact={addNewContact} />\n\n      <h2>Contacts</h2>\n      <Filter newFilter={setFilter} />\n      <ContactList\n        contacts={filteredContactsByName()}\n        deleteContact={deleteContact}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}